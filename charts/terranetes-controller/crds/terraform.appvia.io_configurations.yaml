apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: configurations.terraform.appvia.io
spec:
  group: terraform.appvia.io
  names:
    kind: Configuration
    listKind: ConfigurationList
    plural: configurations
    singular: configuration
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .spec.module
          name: Module
          type: string
        - jsonPath: .spec.writeConnectionSecretToRef.name
          name: Secret
          type: string
        - jsonPath: .status.costs.monthly
          name: Estimated
          type: string
        - jsonPath: .status.resourceStatus
          name: Synchronized
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Configuration is the schema for terraform definitions in terraform controller
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ConfigurationSpec defines the desired state of a terraform
              properties:
                auth:
                  description: Auth is used to configure any options required when the source of the terraform module is private or requires credentials to retrieve. This could be SSH keys or git user/pass or AWS credentials for an s3 bucket.
                  properties:
                    name:
                      description: name is unique within a namespace to reference a secret resource.
                      type: string
                    namespace:
                      description: namespace defines the space within which the secret name must be unique.
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                enableAutoApproval:
                  description: EnableAutoApproval when enabled indicates the configuration does not need to be manually approved. On a change to the configuration, the controller will automatically approve the configuration. Note it still needs to adhere to any checks or policies.
                  type: boolean
                enableDriftDetection:
                  description: EnableDriftDetection when enabled run periodic reconciliation configurations looking for any drift between the expected and current state. If any drift is detected the status is changed and a kubernetes event raised.
                  type: boolean
                module:
                  description: Module is the URL to the source of the terraform module. The format of the URL is a direct implementation of terraform's module reference. Please see the following repository for more details https://github.com/hashicorp/go-getter
                  type: string
                providerRef:
                  description: ProviderRef is the reference to the provider which should be used to execute this configuration.
                  properties:
                    name:
                      description: Name is the name of the provider which contains the credentials to use for this configuration.
                      type: string
                    namespace:
                      description: Namespace is the namespace of the provider itself.
                      type: string
                  required:
                    - name
                  type: object
                terraformVersion:
                  description: TerraformVersion provides the ability to override the default terraform version. Before changing this field its best to consult with platform administrator. As the value of this field is used to change the tag of the terraform container image.
                  type: string
                valueFrom:
                  description: ValueFromSource is a collection of value from sources, where the source of the value is is taken from a secret
                  items:
                    description: ValueFromSource defines a value which is taken from a secret
                    properties:
                      key:
                        description: Key is the key in the secret which we should used for the value
                        type: string
                      optional:
                        description: Optional indicates the secret can be optional, i.e if the secret does not exist, or the key is not contained in the secret, we ignore the error
                        type: boolean
                      secret:
                        description: Secret is the name of the secret in the configuration namespace
                        type: string
                    required:
                      - key
                      - secret
                    type: object
                  type: array
                variables:
                  description: Variables provides the inputs for the terraform module itself. These are passed to the terraform executor and used to execute the plan, apply and destroy phases.
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                writeConnectionSecretToRef:
                  description: WriteConnectionSecretToRef is the name for a secret. On execution of the terraform module any module outputs are written to this secret. The outputs are automatically uppercased and ready to be consumed as environment variables. WriteConnectionSecretRef is the secret where the terraform outputs will be written.
                  properties:
                    keys:
                      description: Keys is a collection of name used to filter the terraform output. By default all keys from the output of the terraform state are written to the connection secret. Here we can define exactly which keys we want from that output.
                      items:
                        type: string
                      type: array
                    name:
                      description: Name is the of the secret where you want to the terraform output to be written. The terraform outputs will be written to the secret as a key value pair. All are uppercased can read to be consumed by the workload.
                      type: string
                  required:
                    - name
                  type: object
              required:
                - module
                - providerRef
              type: object
            status:
              description: ConfigurationStatus defines the observed state of a terraform
              properties:
                conditions:
                  description: Conditions represents the observations of the resource's current state.
                  items:
                    description: Condition is the current observed condition of some aspect of a resource
                    properties:
                      detail:
                        description: Detail is any additional human-readable detail to understand this condition, for example, the full underlying error which caused an issue
                        type: string
                      lastTransitionTime:
                        description: LastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: Message is a human readable message indicating details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      name:
                        description: Name is a human-readable name for this condition.
                        minLength: 1
                        type: string
                      observedGeneration:
                        description: ObservedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: Reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: Status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: Type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - name
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                  x-kubernetes-list-map-keys:
                    - type
                  x-kubernetes-list-type: map
                costs:
                  description: Costs is the predicted costs of this configuration. Note this field is only populated when the integration has been configured by the administrator.
                  properties:
                    enabled:
                      description: Enabled indicates if the cost integration was enabled when this configuration was last executed.
                      type: boolean
                    hourly:
                      description: Hourly is the hourly estimated cost of the configuration
                      type: string
                    monthly:
                      description: Monthly is the monthly estimated cost of the configuration
                      type: string
                  type: object
                driftTimestamp:
                  description: DriftTimestamp is the timestamp of the last drift detection
                  type: string
                lastReconcile:
                  description: LastReconcile describes the generation and time of the last reconciliation
                  properties:
                    generation:
                      description: Generation is the generation reconciled on the last reconciliation
                      format: int64
                      type: integer
                    time:
                      description: Time is the last time the resource was reconciled
                      format: date-time
                      type: string
                  type: object
                lastSuccess:
                  description: LastSuccess descibes the generation and time of the last reconciliation which resulted in a Success status
                  properties:
                    generation:
                      description: Generation is the generation reconciled on the last reconciliation
                      format: int64
                      type: integer
                    time:
                      description: Time is the last time the resource was reconciled
                      format: date-time
                      type: string
                  type: object
                resourceStatus:
                  description: ResourceStatus indicates the status of the resources and if the resources are insync with the configuration
                  type: string
                resources:
                  description: Resources is the number of managed cloud resources which are currently under management. This field is taken from the terraform state itself.
                  type: integer
                terraformVersion:
                  description: TerraformVersion is the version of terraform which was last used to run this configuration
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  preserveUnknownFields: false
