apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: revisions.terraform.appvia.io
spec:
  group: terraform.appvia.io
  names:
    categories:
      - terraform
    kind: Revision
    listKind: RevisionList
    plural: revisions
    singular: revision
  scope: Cluster
  versions:
    - additionalPrinterColumns:
        - jsonPath: .spec.plan.name
          name: Plan
          type: string
        - jsonPath: .spec.plan.description
          name: Description
          type: string
        - jsonPath: .spec.plan.revision
          name: Version
          type: string
        - jsonPath: .status.inUse
          name: InUse
          type: integer
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Revision is the schema for a revision
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: RevisionSpec defines the desired state of a configuration plan revision
              properties:
                configuration:
                  description: |-
                    Configuration is the configuration which this revision is providing to the
                    consumer.
                  properties:
                    auth:
                      description: |-
                        Auth is used to configure any options required when the source of the terraform
                        module is private or requires credentials to retrieve. This could be SSH keys or git
                        user/pass or AWS credentials for an s3 bucket.
                      properties:
                        name:
                          description: name is unique within a namespace to reference a secret resource.
                          type: string
                        namespace:
                          description: namespace defines the space within which the secret name must be unique.
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                    enableAutoApproval:
                      description: |-
                        EnableAutoApproval when enabled indicates the configuration does not need to be
                        manually approved. On a change to the configuration, the controller will automatically
                        approve the configuration. Note it still needs to adhere to any checks or policies.
                      type: boolean
                    enableDriftDetection:
                      description: |-
                        EnableDriftDetection when enabled run periodic reconciliation configurations looking
                        for any drift between the expected and current state. If any drift is detected the
                        status is changed and a kubernetes event raised.
                      type: boolean
                    module:
                      description: |-
                        Module is the URL to the source of the terraform module. The format of the URL is
                        a direct implementation of terraform's module reference. Please see the following
                        repository for more details https://github.com/hashicorp/go-getter
                      type: string
                    plan:
                      description: |-
                        Plan is an optional reference to a plan this configuration is associated with. If
                        not set and a policy exists to enforce a plan, the configuration will be rejected.
                      properties:
                        name:
                          description: Name is the name of the plan this configuration is associated with
                          type: string
                        revision:
                          description: Revision is the revision of the plan this configuration is associated with
                          type: string
                      required:
                        - name
                        - revision
                      type: object
                    providerRef:
                      description: |-
                        ProviderRef is the reference to the provider which should be used to execute this
                        configuration.
                      properties:
                        name:
                          description: |-
                            Name is the name of the provider which contains the credentials to use for this
                            configuration.
                          type: string
                        namespace:
                          description: Namespace is the namespace of the provider itself.
                          type: string
                      required:
                        - name
                      type: object
                    terraformVersion:
                      description: |-
                        TerraformVersion provides the ability to override the default terraform version. Before
                        changing this field its best to consult with platform administrator. As the
                        value of this field is used to change the tag of the terraform container image.
                      type: string
                    tfVars:
                      description: |-
                        TFVars provides an initial set of variables to pass to the Terraform module. If both this and
                        Variables are set, values in Variables will override values with the same key in TFVars.
                      type: string
                    valueFrom:
                      description: |-
                        ValueFromSource is a collection of value from sources, where the source of the value
                        is taken from a secret
                      items:
                        description: ValueFromSource defines a value which is taken from a secret
                        properties:
                          context:
                            description: |-
                              Context is the context is the name of the terraform context where the
                              value should be retrieved from
                            type: string
                          key:
                            description: Key is the key in the secret which we should used for the value
                            type: string
                          name:
                            description: |-
                              Name is the name which we use when injecting the value into the terraform code
                              i.e. the secret may contain data.DB_HOST but you call this database_hostname. Note,
                              for backwards compatiability if no name is provided, we using the key at the name
                            type: string
                          optional:
                            description: |-
                              Optional indicates the secret can be optional, i.e if the secret does not exist, or the key is
                              not contained in the secret, we ignore the error
                            type: boolean
                          secret:
                            description: Secret is the name of the secret in the configuration namespace
                            type: string
                        required:
                          - key
                        type: object
                      type: array
                    variables:
                      description: |-
                        Variables provides the inputs for the terraform module itself. These are passed to the
                        terraform executor and used to execute the plan, apply and destroy phases.
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    writeConnectionSecretToRef:
                      description: |-
                        WriteConnectionSecretToRef is the name for a secret. On execution of the terraform module
                        any module outputs are written to this secret. The outputs are automatically uppercased
                        and ready to be consumed as environment variables.
                        WriteConnectionSecretRef is the secret where the terraform outputs will be written.
                      properties:
                        keys:
                          description: |-
                            Keys is a collection of name used to filter the terraform output. By default all keys from the
                            output of the terraform state are written to the connection secret. Here we can define exactly
                            which keys we want from that output.
                          items:
                            type: string
                          type: array
                        name:
                          description: |-
                            Name is the of the secret where you want to the terraform output to be written. The terraform outputs
                            will be written to the secret as a key value pair. All are uppercased can read to be consumed by the
                            workload.
                          type: string
                      required:
                        - name
                      type: object
                  required:
                    - module
                  type: object
                dependencies:
                  description: |-
                    Dependencies is a collection of dependencies which this revision depends on
                    such as a Provider, Terranetes version, or Revision
                  items:
                    description: |-
                      RevisionDependency defined a dependency for this revision. Currently we support Provider,
                      Revision or Terranetes version
                    properties:
                      context:
                        description: Revision indicates this revision has a dependency on a context resource
                        properties:
                          cloud:
                            description: |-
                              Cloud is the name of the cloud vendor we are dependent on, such as aws, azurerm, which
                              the context resource is associated with
                            type: string
                          name:
                            description: Name is the name of the context resource we are dependent on
                            type: string
                        required:
                          - name
                        type: object
                      provider:
                        description: Provider indicates this revision has a dependency on a provider resource
                        properties:
                          cloud:
                            description: |-
                              Cloud is the name of the cloud vendor we are dependent on, such as aws, azurerm, The
                              controller we ensure we have the provider installed before we can apply the configuration
                            type: string
                        required:
                          - cloud
                        type: object
                      terranetes:
                        description: Terranetes indicates this revision has a dependency on a terranetes controller
                        properties:
                          version:
                            description: |-
                              Version is used to specify the version of the terranetes resource we are dependent on.
                              This format is based on Semantic Versioning 2.0.0 and can use '>=', '>', '<=', and '<'
                            type: string
                        required:
                          - version
                        type: object
                    type: object
                  type: array
                inputs:
                  description: |-
                    Inputs is a collection of inputs which this revision the consumer of this
                    revision can or must provide. This is usually limited to contextual information
                    such as a name for the database, the size required, a bucket name, or policy.
                  items:
                    description: |-
                      RevisionInput is a user defined input for a revision, such as a database name or
                      a cache size etc.
                    properties:
                      default:
                        description: |-
                          Default is the default value for this input, this is a map which must contain
                          the field 'value' => 'default value'. Default values can be any simple of complex
                          type, such as string, int, bool, etc.
                        type: object
                        x-kubernetes-preserve-unknown-fields: true
                      description:
                        description: Description is a short description of the input and its purpose, capabilities, etc.
                        type: string
                      key:
                        description: |-
                          Key is the name of the variable when presented to the terraform module. If this field
                          is not specified, the name will be used as the key instead
                        type: string
                      required:
                        description: Required indicates whether this input is required or not by the revision
                        type: boolean
                      type:
                        description: Type is the format of the input, such as string, int, bool, etc.
                        type: string
                    required:
                      - description
                    type: object
                  type: array
                plan:
                  description: |-
                    Plan contains the information related to the name, version, description of
                    the revision.
                  properties:
                    categories:
                      description: |-
                        Categories is a list of categories which this revision is grouped by, such as database,
                        cache, etc.
                      items:
                        type: string
                      type: array
                    changeLog:
                      description: ChangeLog provides a human readable list of changes for this revision
                      type: string
                    description:
                      description: Description is a short description of the revision and its purpose, capabilities, etc.
                      type: string
                    name:
                      description: |-
                        Name is the name which this revision is grouped by, such as mysql, redis, etc. Multiple
                        revisions can be grouped by the same name, presented as a list of revisions for a single
                        plan name
                      type: string
                    revision:
                      description: Revision is the version of the revision, such as 1.0.0, 1.0.1, etc.
                      type: string
                  required:
                    - description
                    - name
                    - revision
                  type: object
              required:
                - configuration
                - plan
              type: object
            status:
              description: RevisionStatus defines the observed state of a terraform
              properties:
                conditions:
                  description: Conditions represents the observations of the resource's current state.
                  items:
                    description: Condition is the current observed condition of some aspect of a resource
                    properties:
                      detail:
                        description: |-
                          Detail is any additional human-readable detail to understand this condition, for example,
                          the full underlying error which caused an issue
                        type: string
                      lastTransitionTime:
                        description: |-
                          LastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          Message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      name:
                        description: Name is a human-readable name for this condition.
                        minLength: 1
                        type: string
                      observedGeneration:
                        description: |-
                          ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          Reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: Status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: |-
                          Type of condition in CamelCase or in foo.example.com/CamelCase.
                          ---
                          Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict is important.
                          The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - name
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                  x-kubernetes-list-map-keys:
                    - type
                  x-kubernetes-list-type: map
                inUse:
                  description: InUse is the number of cloud resources which are currently using this revision
                  type: integer
                lastReconcile:
                  description: LastReconcile describes the generation and time of the last reconciliation
                  properties:
                    generation:
                      description: Generation is the generation reconciled on the last reconciliation
                      format: int64
                      type: integer
                    time:
                      description: Time is the last time the resource was reconciled
                      format: date-time
                      type: string
                  type: object
                lastSuccess:
                  description: |-
                    LastSuccess descibes the generation and time of the last reconciliation which resulted in
                    a Success status
                  properties:
                    generation:
                      description: Generation is the generation reconciled on the last reconciliation
                      format: int64
                      type: integer
                    time:
                      description: Time is the last time the resource was reconciled
                      format: date-time
                      type: string
                  type: object
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  preserveUnknownFields: false
