---
apiVersion: terraform.appvia.io/v1alpha1
kind: Policy
metadata:
  name: permitted-modules
spec:
  constraints:
    selector:
#      Leaving the selector blank indicates the policy is applied to all
#      namespace:
#        matchLabels: {}
#        matchExpressions: []
#      resource:
#        matchLabels: {}
#        matchExpressions: []
    modules:
      allowed:
        - "https://github.com/.*"
---
apiVersion: terraform.appvia.io/v1alpha1
kind: Policy
metadata:
  name: environment-defaults
spec:
  defaults:
    - selector:
        namespace:
          matchExpressions:
            - key: kubernetes.io/metadata.name
              operator: Exists
      variables:
        environment: dev
---
apiVersion: terraform.appvia.io/v1alpha1
kind: Policy
metadata:
  name: checkov
spec:
  constraints:
    checkov:
      # See: https://www.checkov.io/5.Policy%20Index/terraform.html
      checks: []
      # See: https://www.checkov.io/5.Policy%20Index/terraform.html
      skipChecks: []
---
# Create an exception to the above policy and force configurations
# in the specific namespace to use this instead
---
apiVersion: terraform.appvia.io/v1alpha1
kind: Policy
metadata:
  name: checkov-override
spec:
  constraints:
    checkov:
      selector:
        namespace:
          matchExpressions:
            - key: kubernetes.io/metadata.name
              operator: In
              values: [apps2]
      # See: https://www.checkov.io/5.Policy%20Index/terraform.html
      skipChecks:
        - <NAME>
      external:
        - name:
          url:
          secretRef:
            name:
---
# Source a centrally managed policy
apiVersion: terraform.appvia.io/v1alpha1
kind: Policy
metadata:
  name: checkov
spec:
  constraints:
    checkov:
      source:
        # an optional configuration file to use, else default to .checkov.yaml
        configuration: PATH
        # the source to true
        url: https://github.com/appvia/terranetes-policy?ref=main
        # secretRef is an optional reference to a secret container credentuals to retrieve
        # the source above - this uses the same format as modules
        secretRef:
          name: NAME
          namespace: MUST_BE_IN_CONTROLLER_NAMESPACE
