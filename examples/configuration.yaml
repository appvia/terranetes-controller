---
apiVersion: terraform.appvia.io/v1alpha1
kind: Configuration
metadata:
  name: bucket
spec:
  ## Using a public repository
  module: https://github.com/terraform-aws-modules/terraform-aws-s3-bucket.git?ref=v3.1.0
  ##
  ## If you need to use a private git repository, use the git format as below
  ##
  # module: git::ssh://git@github.com/ORG/REPOSITORY?ref=<TAG|BRANCH|COMMIT>
  ##
  ## For private repositories we need credentials. Assuming the source is git you can use the
  ## command: $ kubectl -n NAMESPACE create secret generic ssh-key --from-file=SSH_KEY_AUTH=ida.rsa
  ## to push the private key and then reference secret in the auth as below
  #
  # auth:
  #   name: ssh-key
  #
  ## All module references have the ability to extract specific folders from within the source. Similar
  ## to terraform module syntax use the '//PATH/TO/DIRECTORY. Lets assume you wish to extract modules/bucket from
  ## a repository github.com/appvia/terraform, the module source would look like
  #
  # module: https://github.com/appvia/terraform//modules/bucket?ref=<TAG|COMMIT|BRANCH>
  #
  ## The syntax is the same regardless of the protocol, so a private git repository for the same example
  ## above would look like
  #
  # module: git::ssh://git@github.com/appvia/terraform//modules/bucket?ref=<TAG|BRANCH|COMMIT>
  #

  providerRef:
    name: aws

  writeConnectionSecretToRef:
    name: test
    keys:
      - s3_bucket_id
      - s3_bucket_arn
      - s3_bucket_region

  variables:
    # -- The name of the bucket. If omitted, Terraform will assign a random, unique name
    bucket: terranetes-controller-ci-bucket
    # -- The canned ACL to apply
    acl: private
    # -- Map containing versioning configuration
    versioning:
      enabled: true
    # --Whether Amazon S3 should block public ACLs for this bucket
    block_public_acls: true
    # -- Whether Amazon S3 should block public bucket policies for this bucket
    block_public_policy: true
    # -- Whether Amazon S3 should ignore public ACLs for this bucket
    ignore_public_acls: true
    # -- Whether Amazon S3 should restrict public bucket policies for this bucket
    restrict_public_buckets: true
    # -- Map containing server-side encryption configuration
    server_side_encryption_configuration:
      rule:
        apply_server_side_encryption_by_default:
          sse_algorithm: "aws:kms"
        bucket_key_enabled: true
